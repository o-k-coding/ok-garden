---
import BaseLayout from '../../layouts/BaseLayout.astro';

type TagRoutes = {
  params: {
    tag: string;
  };
  props: {
    posts: any[];
  };
};

// Conventional function to return page routes for dynamic routing
export async function getStaticPaths(): Promise<TagRoutes[]> {
  const allPosts = await Astro.glob('../posts/*.md');

  const tags = allPosts.reduce(
    (tags, post) => {
      post.frontmatter.tags.forEach((tag: string) => {
        if (!tags[tag]) {
          tags[tag] = {
            params: {
              tag,
            },
            props: {
              posts: [],
            },
          };
        }
        tags[tag].props.posts.push(post);
      });
      return tags;
    },
    {} as Record<string, TagRoutes>,
  );

  const allTags = Object.values(tags);

  return allTags;
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post: any) =>
  post.frontmatter.tags.includes(tag),
);
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts.map((post: any) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
